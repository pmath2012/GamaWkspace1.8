/**
* Name: test
* Author: pmath
* Description: 
* Tags: Tag1, Tag2, TagN
*/

model test

/* Insert your model definition here */

global{
	
	
}
species walker skills:[moving]{
	rgb color <- #cornsilk;
	point target<-nil;
	bool gohome <- false;
	//Attributes
	bool is_happy;
	//Variables that handle urges
	float hunger_meter;
	float thirst_meter;
	float bathroom_meter;
	//
	bool target_reached <- false;

	reflex walk when:target!=nil{
		speed <- 1.0;
		do goto target:target on:roads;
		if(location = target){
			target <- nil;
			target_reached<-true;
			
		}
	
	}
	//when we need to change location
	reflex go_to_new_location when: (hunger_meter <= 0 or thirst_meter <= 0 or bathroom_meter>=1) or target_reached {	
		target_reached <- false;
		if(hunger_meter <= 0){
			ask food_court{
				myself.target <- location;
				myself.color <- #red;
			}
		}
		else if(thirst_meter <= 0){
			ask refreshments{
				myself.target <- location;
				myself.color <- #yellow;
			}
		}
		else if(bathroom_meter>=1){
			ask bathroom{
				myself.target <- location;
				myself.color <- #blue;
			}
		}
		else if(is_happy){
			target <- {50,50};
			color <- #cornsilk;
		}
		
	}
	reflex reduce_stats{
		hunger_meter <- hunger_meter - (0.001 + float(rnd(0.0001)));
		thirst_meter <- hunger_meter - (0.001 + float(rnd(0.0001)));
		bathroom_meter <- bathroom_meter + float(rnd(0.001));
		write 'hunger_meter : '+hunger_meter;
		write 'thirst_meter : '+thirst_meter;
		write'bathroom_meter: '+bathroom_meter;
		write'-------------------------------';
		if(hunger_meter<=0 or thirst_meter<=0 or bathroom_meter>=1){
			is_happy<-false;
		}
		else{
			is_happy<-true;
		}

	}
	reflex wander when:target=nil{
		target_reached <- true;
		speed <- 1.0;
		do wander bounds:square(25);
	}
	
	
			
	reflex go_home when:gohome {
		do goto target:target on:roads;
	}
	
	aspect base{
		draw cube(2) color:#aqua;
		draw sphere(1)  at: {location.x, location.y, location.z+2} color:color;
	}
}
experiment exp{
	
    output {
        display MyDisplay type: opengl {
			graphics "meh"{
				draw square(100) texture:background_file;
				loop edges over:roads.edges{
					draw edges width: 10 texture:roadTexture;
				}
			
			}
			species walker aspect:base;=
        }
    }
}
